// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// TableUpdateRequestSyncModeEnum - This field appears in the response if the connector supports switching sync modes for tables
type TableUpdateRequestSyncModeEnum string

const (
	TableUpdateRequestSyncModeEnumSoftDelete TableUpdateRequestSyncModeEnum = "SOFT_DELETE"
	TableUpdateRequestSyncModeEnumHistory    TableUpdateRequestSyncModeEnum = "HISTORY"
	TableUpdateRequestSyncModeEnumLive       TableUpdateRequestSyncModeEnum = "LIVE"
)

func (e *TableUpdateRequestSyncModeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "SOFT_DELETE":
		fallthrough
	case "HISTORY":
		fallthrough
	case "LIVE":
		*e = TableUpdateRequestSyncModeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for TableUpdateRequestSyncModeEnum: %s", s)
	}
}

type TableUpdateRequest struct {
	// The set of columns within your table schema config that are synced into the destination
	Columns map[string]ColumnUpdateRequest `json:"columns,omitempty"`
	// The boolean value specifying whether the sync for the table into the destination is enabled.
	Enabled *bool `json:"enabled,omitempty"`
	// This field appears in the response if the connector supports switching sync modes for tables
	SyncMode *TableUpdateRequestSyncModeEnum `json:"sync_mode,omitempty"`
}
