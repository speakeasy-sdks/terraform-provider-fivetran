// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// DestinationResponseRegionEnum - Data processing location. This is where Fivetran will operate and run computation on data.
type DestinationResponseRegionEnum string

const (
	DestinationResponseRegionEnumGcpUsEast4                DestinationResponseRegionEnum = "GCP_US_EAST4"
	DestinationResponseRegionEnumGcpUsWest1                DestinationResponseRegionEnum = "GCP_US_WEST1"
	DestinationResponseRegionEnumGcpEuropeWest3            DestinationResponseRegionEnum = "GCP_EUROPE_WEST3"
	DestinationResponseRegionEnumGcpAustraliaSoutheast1    DestinationResponseRegionEnum = "GCP_AUSTRALIA_SOUTHEAST1"
	DestinationResponseRegionEnumGcpNorthamericaNortheast1 DestinationResponseRegionEnum = "GCP_NORTHAMERICA_NORTHEAST1"
	DestinationResponseRegionEnumGcpEuropeWest2            DestinationResponseRegionEnum = "GCP_EUROPE_WEST2"
	DestinationResponseRegionEnumGcpAsiaSoutheast1         DestinationResponseRegionEnum = "GCP_ASIA_SOUTHEAST1"
	DestinationResponseRegionEnumAwsUsEast1                DestinationResponseRegionEnum = "AWS_US_EAST_1"
	DestinationResponseRegionEnumAwsUsEast2                DestinationResponseRegionEnum = "AWS_US_EAST_2"
	DestinationResponseRegionEnumAwsUsWest2                DestinationResponseRegionEnum = "AWS_US_WEST_2"
	DestinationResponseRegionEnumAwsApSoutheast2           DestinationResponseRegionEnum = "AWS_AP_SOUTHEAST_2"
	DestinationResponseRegionEnumAwsEuCentral1             DestinationResponseRegionEnum = "AWS_EU_CENTRAL_1"
	DestinationResponseRegionEnumAwsEuWest1                DestinationResponseRegionEnum = "AWS_EU_WEST_1"
	DestinationResponseRegionEnumAwsEuWest2                DestinationResponseRegionEnum = " AWS_EU_WEST_2"
	DestinationResponseRegionEnumAzureEastus2              DestinationResponseRegionEnum = "AZURE_EASTUS2"
	DestinationResponseRegionEnumAzureAustraliaeast        DestinationResponseRegionEnum = "AZURE_AUSTRALIAEAST"
	DestinationResponseRegionEnumGcpAsiaSouth1             DestinationResponseRegionEnum = "GCP_ASIA_SOUTH1"
)

func (e *DestinationResponseRegionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "GCP_US_EAST4":
		fallthrough
	case "GCP_US_WEST1":
		fallthrough
	case "GCP_EUROPE_WEST3":
		fallthrough
	case "GCP_AUSTRALIA_SOUTHEAST1":
		fallthrough
	case "GCP_NORTHAMERICA_NORTHEAST1":
		fallthrough
	case "GCP_EUROPE_WEST2":
		fallthrough
	case "GCP_ASIA_SOUTHEAST1":
		fallthrough
	case "AWS_US_EAST_1":
		fallthrough
	case "AWS_US_EAST_2":
		fallthrough
	case "AWS_US_WEST_2":
		fallthrough
	case "AWS_AP_SOUTHEAST_2":
		fallthrough
	case "AWS_EU_CENTRAL_1":
		fallthrough
	case "AWS_EU_WEST_1":
		fallthrough
	case " AWS_EU_WEST_2":
		fallthrough
	case "AZURE_EASTUS2":
		fallthrough
	case "AZURE_AUSTRALIAEAST":
		fallthrough
	case "GCP_ASIA_SOUTH1":
		*e = DestinationResponseRegionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DestinationResponseRegionEnum: %s", s)
	}
}

type DestinationResponse struct {
	// The unique identifier for the group within the Fivetran system.
	GroupID *string `json:"group_id,omitempty"`
	// The unique identifier for the destination within the Fivetran system
	ID *string `json:"id,omitempty"`
	// Data processing location. This is where Fivetran will operate and run computation on data.
	Region *DestinationResponseRegionEnum `json:"region,omitempty"`
	// The name for the destination type within the Fivetran system.
	Service *string `json:"service,omitempty"`
	// Destination setup status
	SetupStatus *string `json:"setup_status,omitempty"`
	// Setup tests results for this destination
	SetupTests []SetupTestResultResponse `json:"setup_tests,omitempty"`
	// Determines the time zone for the Fivetran sync schedule.
	TimeZoneOffset *string `json:"time_zone_offset,omitempty"`
}
