// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// UpdateDestinationRequestRegionEnum - Data processing location. This is where Fivetran will operate and run computation on data.
type UpdateDestinationRequestRegionEnum string

const (
	UpdateDestinationRequestRegionEnumGcpUsEast4                UpdateDestinationRequestRegionEnum = "GCP_US_EAST4"
	UpdateDestinationRequestRegionEnumGcpUsWest1                UpdateDestinationRequestRegionEnum = "GCP_US_WEST1"
	UpdateDestinationRequestRegionEnumGcpEuropeWest3            UpdateDestinationRequestRegionEnum = "GCP_EUROPE_WEST3"
	UpdateDestinationRequestRegionEnumGcpAustraliaSoutheast1    UpdateDestinationRequestRegionEnum = "GCP_AUSTRALIA_SOUTHEAST1"
	UpdateDestinationRequestRegionEnumGcpNorthamericaNortheast1 UpdateDestinationRequestRegionEnum = "GCP_NORTHAMERICA_NORTHEAST1"
	UpdateDestinationRequestRegionEnumGcpEuropeWest2            UpdateDestinationRequestRegionEnum = "GCP_EUROPE_WEST2"
	UpdateDestinationRequestRegionEnumGcpAsiaSoutheast1         UpdateDestinationRequestRegionEnum = "GCP_ASIA_SOUTHEAST1"
	UpdateDestinationRequestRegionEnumAwsUsEast1                UpdateDestinationRequestRegionEnum = "AWS_US_EAST_1"
	UpdateDestinationRequestRegionEnumAwsUsEast2                UpdateDestinationRequestRegionEnum = "AWS_US_EAST_2"
	UpdateDestinationRequestRegionEnumAwsUsWest2                UpdateDestinationRequestRegionEnum = "AWS_US_WEST_2"
	UpdateDestinationRequestRegionEnumAwsApSoutheast2           UpdateDestinationRequestRegionEnum = "AWS_AP_SOUTHEAST_2"
	UpdateDestinationRequestRegionEnumAwsEuCentral1             UpdateDestinationRequestRegionEnum = "AWS_EU_CENTRAL_1"
	UpdateDestinationRequestRegionEnumAwsEuWest1                UpdateDestinationRequestRegionEnum = "AWS_EU_WEST_1"
	UpdateDestinationRequestRegionEnumAwsEuWest2                UpdateDestinationRequestRegionEnum = " AWS_EU_WEST_2"
	UpdateDestinationRequestRegionEnumAzureEastus2              UpdateDestinationRequestRegionEnum = "AZURE_EASTUS2"
	UpdateDestinationRequestRegionEnumAzureAustraliaeast        UpdateDestinationRequestRegionEnum = "AZURE_AUSTRALIAEAST"
	UpdateDestinationRequestRegionEnumGcpAsiaSouth1             UpdateDestinationRequestRegionEnum = "GCP_ASIA_SOUTH1"
)

func (e *UpdateDestinationRequestRegionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "GCP_US_EAST4":
		fallthrough
	case "GCP_US_WEST1":
		fallthrough
	case "GCP_EUROPE_WEST3":
		fallthrough
	case "GCP_AUSTRALIA_SOUTHEAST1":
		fallthrough
	case "GCP_NORTHAMERICA_NORTHEAST1":
		fallthrough
	case "GCP_EUROPE_WEST2":
		fallthrough
	case "GCP_ASIA_SOUTHEAST1":
		fallthrough
	case "AWS_US_EAST_1":
		fallthrough
	case "AWS_US_EAST_2":
		fallthrough
	case "AWS_US_WEST_2":
		fallthrough
	case "AWS_AP_SOUTHEAST_2":
		fallthrough
	case "AWS_EU_CENTRAL_1":
		fallthrough
	case "AWS_EU_WEST_1":
		fallthrough
	case " AWS_EU_WEST_2":
		fallthrough
	case "AZURE_EASTUS2":
		fallthrough
	case "AZURE_AUSTRALIAEAST":
		fallthrough
	case "GCP_ASIA_SOUTH1":
		*e = UpdateDestinationRequestRegionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateDestinationRequestRegionEnum: %s", s)
	}
}

type UpdateDestinationRequest struct {
	// The connector setup configuration. Check possible config formats in [create method](/openapi/reference/v1/operation/create_destination/)
	Config interface{} `json:"config,omitempty"`
	// Data processing location. This is where Fivetran will operate and run computation on data.
	Region *UpdateDestinationRequestRegionEnum `json:"region,omitempty"`
	// Specifies whether setup tests should be run automatically.
	RunSetupTests *bool `json:"run_setup_tests,omitempty"`
	// Determines the time zone for the Fivetran sync schedule.
	TimeZoneOffset *string `json:"time_zone_offset,omitempty"`
	// Specifies whether we should trust the certificate automatically. The default value is FALSE. If a certificate is not trusted automatically, it has to be approved with [Certificates Management API Approve a destination certificate](https://fivetran.com/docs/rest-api/certificates#approveadestinationcertificate).
	TrustCertificates *bool `json:"trust_certificates,omitempty"`
	// Specifies whether we should trust the SSH fingerprint automatically. The default value is FALSE. If a fingerprint is not trusted automatically, it has to be approved with [Certificates Management API Approve a destination fingerprint](https://fivetran.com/docs/rest-api/certificates#approveadestinationfingerprint).
	TrustFingerprints *bool `json:"trust_fingerprints,omitempty"`
}
